steps:
  # Step 1: Build the Docker container image.
  # We use the standard Docker builder provided by Google.
  - name: 'gcr.io/cloud-builders/docker'
    # Give this step an ID so we can refer to it
    id: 'Build'
    # Make the secrets available as environment variables for this step
    secretEnv:
      - 'VITE_FIREBASE_API_KEY'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build \
          --tag 'us-central1-docker.pkg.dev/$PROJECT_ID/cronwatch/cronwatch-service:$COMMIT_SHA' \
          --build-arg "VITE_FIREBASE_API_KEY=$$VITE_FIREBASE_API_KEY" \
          .

  # Step 2: Push the container image to Google Artifact Registry.
  # This makes the image available for deployment.
  - name: 'gcr.io/cloud-builders/docker'
  # Give this step an ID so we can refer to it
    id: 'Push'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/cronwatch-469318/cronwatch/cronwatch-service:$COMMIT_SHA'

  # Step 3: Deploy the new image to Cloud Run.
  # We use the gcloud builder to run command-line tools.
  - name: 'gcr.io/google-appengine/exec-wrapper'
  # Give this step an ID so we can refer to it
    id: 'Deploy'
    args:
      - 'gcloud'
      - 'run'
      - 'deploy'
      # IMPORTANT: Replace YOUR_SERVICE_NAME with the name you'll give your service (e.g., 'cronwatch').
      - 'cronwatch' 
      - '--image'
      - 'us-central1-docker.pkg.dev/cronwatch-469318/cronwatch/cronwatch-service:$COMMIT_SHA'
      # IMPORTANT: Use the same region as above.
      - '--region'
      - 'us-central1' 
      # This flag allows unauthenticated users to access your web app.
      # This is necessary for a public website.
      - '--allow-unauthenticated'

availableSecrets:
  secretManager:
    - versionName: projects/cronwatch-469318/secrets/VITE_FIREBASE_API_KEY/versions/latest
      env: 'VITE_FIREBASE_API_KEY'

options:
  logging: CLOUD_LOGGING_ONLY